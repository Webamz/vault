@page
@model TheVault.Pages.Products.IndexModel
@{
}

<style>
    .card-img-top {
        height: 300px;
        object-fit: cover;
    }

    .product-title {
        background-color: #007bff;
        color: #ffffff;
        padding: 20px;
        text-align: center;
        font-size: 2.5em;
        margin-bottom: 30px;
    }

    .product-card {
        margin-bottom: 30px;
    }

    .card-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
</style>

<div class="container">
    <div class="product-title">
        <h2>Our Amazing Products</h2>
    </div>

    @if (User.IsInRole("admin") || User.IsInRole("seller"))
    {
        <a class="btn btn-primary mb-3" href="/Products/Create">New Product</a>
    }

    <div class="row">
        <div class="col-md-4 offset-md-8 mb-4">
            <form method="get" action="/Products/Index">
                <div class="input-group">
                    <select class="form-control" name="categoryFilter">
                        <option value="">All Categories</option>
                        @foreach (var category in Model.ListofCategories)
                        {
                            <option value="@category.id">@category.name</option>
                        }
                    </select>
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="row">
        @foreach (var item in Model.ListofProducts)
        {
            <div class="col-md-4 mb-4 product-card">
                <div class="card">
                    <img src="@item.image" class="card-img-top" alt="@item.name">
                    <div class="card-body">
                        <h5 class="card-title">@item.name</h5>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">Price: @item.price</li>
                            <li class="list-group-item">
                                @if (User.IsInRole("admin") || User.IsInRole("seller"))
                                {
                                    <span class="text-info">In Stock: @item.instock</span>
                                }
                                else if (int.TryParse(item.instock, out int instockValue) && instockValue > 0)
                                {
                                    <span class="text-success">Available</span>
                                }
                                else
                                {
                                    <span class="text-danger">Not Available</span>
                                }
                            </li>
                            <li class="list-group-item">Category: @Model.ListofCategories.FirstOrDefault(c => c.id == item.category)?.name</li>
                        </ul>
                    </div>
                    <div class="card-footer">
                        @if (User.IsInRole("admin"))
                        {
                            <a href="/Products/Edit?id=@item.id" class="btn btn-primary btn-sm">Edit</a>
                            <a href="/Products/Delete?id=@item.id" class="btn btn-danger btn-sm">Delete</a>
                        }
                        <a href="/Products/Details?id=@item.id" class="btn btn-success btn-sm">View Details</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
