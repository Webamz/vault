@page
@model TheCollection.Pages.OrderModel
@using Newtonsoft.Json;
@{
}

<h2 class="mb-4">Order Summary</h2>

@if (Model.CartItems != null && Model.CartItems.Any())
{
    <form method="post" >
        <table class="table">
            <thead>
                <tr>
                    <th>Product ID</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <!-- Add other columns as needed -->
                </tr>
            </thead>
            <tbody>
                @foreach (var productGroup in Model.CartItems.GroupBy(p => p.id))
                {
                    var product = productGroup.First();
                    var quantity = productGroup.Count();

                    <tr>
                        <td>@product.id</td>
                        <td>@product.name</td>
                        <td>@product.desc</td>
                        <td>@product.price</td>
                        <td>@quantity</td>
                        <td>$@(decimal.Parse(product.price) * quantity)</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="4"></td>
                    <td>Total Price:</td>
                    <td>$@Model.TotalPrice</td>
                </tr>
            </tfoot>
        </table>
     
        <div class="mt-4">
            <a asp-page="/Cart" class="btn btn-secondary">Back to Cart</a>
       @*     <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal">Cancel Order</button>*@
          <input type="hidden" name="cartItems" value="@JsonConvert.SerializeObject(Model.CartItems)" />
    <input type="hidden" name="totalPrice" value="@Model.TotalPrice" />

     <div class="mb-3">
        <label for="creditCardNumber" class="form-label">Credit Card Number</label>
        <input type="text" class="form-control" id="creditCardNumber" name="creditCardNumber" required>
    </div>
        <button type="submit" class="btn btn-primary">Confirm Order</button>
        </div>
    </form>

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger mt-3" role="alert">
        @Model.ErrorMessage
    </div>
}
}
else
{
    <p>No items in the order.</p>
}


@*<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="deleteConfirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteConfirmationModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to cancel this order?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
               <a asp-page="/Products" class="btn btn-danger">Yes, Cancel Order</a>

            </div>
        </div>
    </div>
</div>*@
